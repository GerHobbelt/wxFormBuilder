name: Windows
on:
  push:
    branches-ignore:
      - '**/sources/**'
      - '**/linux/**'
      - '**/macos/**'
    paths-ignore:
      - '.github/workflows/sources.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/macos.yml'
      - 'data/artwork/**'
      - 'data/packaging/linux/**'
      - 'data/packaging/macos/**'
      - 'data/platform/linux/**'
      - 'data/platform/macos/**'
      - 'docs/**'
      - '.clang-format'
      - '.git-blame-ignore-revs'
      - '.git-properties'
      - 'Changelog.txt'
      - 'LICENSE'
      - '**.md'
  pull_request:
    paths-ignore:
      - '.github/workflows/sources.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/macos.yml'
      - 'data/artwork/**'
      - 'data/packaging/linux/**'
      - 'data/packaging/macos/**'
      - 'data/platform/linux/**'
      - 'data/platform/macos/**'
      - 'docs/**'
      - '.clang-format'
      - '.git-blame-ignore-revs'
      - '.git-properties'
      - 'Changelog.txt'
      - 'LICENSE'
      - '**.md'

jobs:
  installer:
    name: Installer
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw32, env: i686 }
          - { sys: mingw64, env: x86_64 }
    steps:
    - uses: actions/checkout@v3.1.0
      with:
        submodules: true
    - name: Fetch tags
      shell: cmd
      run: |
        git fetch --prune --depth=1 --no-recurse-submodules
    - uses: msys2/setup-msys2@v2.13.0
      with:
        msystem: ${{ matrix.sys }}
        release: false
        update: false
        install: >-
          mingw-w64-${{ matrix.env }}-toolchain
          mingw-w64-${{ matrix.env }}-cmake
          mingw-w64-${{ matrix.env }}-make
          mingw-w64-${{ matrix.env }}-wxWidgets3.1
          mingw-w64-${{ matrix.env }}-boost
          base-devel
          git
    - name: Configure msys2 environment
      shell: msys2 {0}
      run: |
        git config --global core.autocrlf true
        echo "project_version=`sed -n -E -e "/^project\(wxFormBuilder[[:space:]]+VERSION[[:space:]]+(.*)[[:space:]]+LANGUAGES.*$/{s//-\1/p;q}" CMakeLists.txt `" >> $GITHUB_ENV
    - name: Create build system
      shell: msys2 {0}
      run: |
        cmake -S . -B _build -G "MSYS Makefiles" --install-prefix "$PWD/_install" -DCMAKE_BUILD_TYPE=Release
    - name: Package build system
      if: ${{ contains(github.ref, '/build/') }}
      shell: cmd
      run: |
        7z a -tzip -bb1 wxFormBuilder-Windows-${{ matrix.env }}-build.zip _build
    - name: Build
      shell: msys2 {0}
      run: |
        cmake --build _build --config Release -j `nproc`
    - name: Test stage
      shell: msys2 {0}
      run: |
        _build\\stage\\wxFormBuilder.exe -v
        _build\\stage\\wxFormBuilder.exe -g test\\wxfbTest.fbp
    - name: Install
      shell: msys2 {0}
      run: |
        cmake --install _build --config Release --strip
    - name: Test install
      shell: cmd
      run: |
        _install\\wxFormBuilder.exe -v
        _install\\wxFormBuilder.exe -g test\\wxfbTest.fbp
    - name: Create archive
      shell: cmd
      run: |
        cd _install
        7z a -tzip -bb1 "..\\wxFormBuilder${{ env.project_version }}-${{ matrix.env }}.zip" .
    - name: Create installer
      shell: cmd
      run: |
        ISCC.exe /DArch=${{ matrix.env }} /O. data\\packaging\\windows\\wxFormBuilder.iss
    - uses: actions/upload-artifact@v3.1.1
      if: ${{ contains(github.ref, '/build/') }}
      with:
        name: Windows Build Debugging ${{ matrix.env }}
        path: |
          wxFormBuilder-*-build.zip
    - uses: actions/upload-artifact@v3.1.1
      with:
        name: Windows Archive ${{ matrix.env }}
        path: |
          wxFormBuilder-*.zip
          !wxFormBuilder-*-build.zip
    - uses: actions/upload-artifact@v3.1.1
      with:
        name: Windows Installer ${{ matrix.env }}
        path: |
          wxFormBuilder-*.exe
